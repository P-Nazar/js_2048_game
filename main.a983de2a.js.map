{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","gameField","messageLose","messageStart","messageWin","gameScore","score","numRows","numCols","matrix","updateBoard","i","j","number","cell","rows","cells","classList","remove","add","textContent","value","generateRandomCells","hasEmptyCell","r","Math","floor","random","c","canMerge","moveUp","col","push","filteredCol","move","k","moveDown","moveLeft","leftShift","filteredRow","moveRight","rightShift","reverse","row","filter","length","addEventListener","contains","forEach","splice","movement","key","originalMatrix","JSON","parse","stringify","startsWith"],"mappings":"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","file":"main.a983de2a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst gameField = document.querySelector('.game-field');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nlet score = 0;\n\nconst numRows = 4;\nconst numCols = 4;\nconst matrix = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n\n];\n\nfunction updateBoard() {\n  for (let i = 0; i < numRows; i++) {\n    for (let j = 0; j < numCols; j++) {\n      const number = matrix[i][j];\n      const cell = gameField.rows[i].cells[j];\n\n      if (number === 2048) {\n        messageWin.classList.remove('hidden');\n        gameField.classList.add('game-over');\n\n        return;\n      } else {\n        messageWin.classList.add('hidden');\n        gameField.classList.remove('game-over');\n      }\n      cell.textContent = '';\n      cell.classList.value = '';\n      cell.classList.add('field-cell');\n\n      if (number > 0) {\n        cell.textContent = number;\n        cell.classList.add(`field-cell--${number}`);\n      }\n    }\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('restart')) {\n    startButton.classList.remove('restart');\n    startButton.textContent = 'Start';\n    score = 0;\n    gameScore.textContent = score;\n\n    matrix.forEach(cell => {\n      cell.splice(0, numRows, 0, 0, 0, 0);\n    });\n\n    generateRandomCells();\n    generateRandomCells();\n  } else {\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n\n    score = 0;\n    gameScore.textContent = score;\n\n    matrix.forEach(cell => {\n      cell.splice(0, numRows, 0, 0, 0, 0);\n      messageLose.classList.add('hidden');\n    });\n    generateRandomCells();\n    generateRandomCells();\n  }\n});\n\nfunction generateRandomCells() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  const r = Math.floor(Math.random() * numRows);\n  const c = Math.floor(Math.random() * numCols);\n\n  if (matrix[r][c] === 0) {\n    matrix[r][c] = (Math.random() >= 0.9) ? 4 : 2;\n    updateBoard();\n  } else {\n    generateRandomCells();\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let r = 0; r < numRows; r++) {\n    for (let c = 0; c < numCols; c++) {\n      if (matrix[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canMerge() {\n  for (let r = 0; r < numRows; r++) {\n    for (let c = 0; c < numCols; c++) {\n      if (r > 0 && matrix[r][c] === matrix[r - 1][c]) {\n        return true;\n      }\n\n      if (r < numRows - 1 && matrix[r][c] === matrix[r + 1][c]) {\n        return true;\n      }\n\n      if (c > 0 && matrix[r][c] === matrix[r][c - 1]) {\n        return true;\n      }\n\n      if (c < numCols - 1 && matrix[r][c] === matrix[r][c + 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\ndocument.addEventListener('keydown', (movement) => {\n  const key = movement.key;\n  const originalMatrix = JSON.parse(JSON.stringify(matrix));\n\n  if (!hasEmptyCell() && !canMerge() && key.startsWith('Arrow')) {\n    messageLose.classList.remove('hidden');\n\n    return;\n  }\n\n  switch (key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    default:\n  }\n\n  if (JSON.stringify(matrix) !== JSON.stringify(originalMatrix)) {\n    gameScore.textContent = score;\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    gameField.classList.remove('game-over');\n    generateRandomCells();\n  }\n});\n\nfunction moveUp() {\n  for (let j = 0; j < numCols; j++) {\n    const col = [];\n\n    for (let i = 0; i < numRows; i++) {\n      col.push(matrix[i][j]);\n    }\n\n    const filteredCol = move(col);\n\n    for (let k = 0; k < numRows; k++) {\n      matrix[k][j] = filteredCol[k];\n    }\n    updateBoard();\n  }\n}\n\nfunction moveDown() {\n  for (let j = 0; j < numCols; j++) {\n    const col = [];\n\n    for (let i = numRows - 1; i >= 0; i--) {\n      col.push(matrix[i][j]);\n    }\n\n    const filteredCol = move(col);\n\n    for (let i = numRows - 1; i >= 0; i--) {\n      matrix[i][j] = filteredCol[numRows - 1 - i];\n    }\n  }\n\n  updateBoard();\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < numRows; i++) {\n    const leftShift = matrix[i];\n\n    const filteredRow = move(leftShift);\n\n    matrix[i] = filteredRow;\n\n    updateBoard();\n  }\n}\n\nfunction moveRight() {\n  for (let i = 0; i < numRows; i++) {\n    const rightShift = [...matrix[i]].reverse();\n\n    const filteredRow = move(rightShift);\n\n    matrix[i] = filteredRow.reverse();\n\n    updateBoard();\n  }\n}\n\nfunction move(row) {\n  let filteredRow = row.filter(number => number !== 0);\n\n  for (let j = 0; j < filteredRow.length - 1; j++) {\n    if (filteredRow[j] === filteredRow[j + 1]) {\n      filteredRow[j] *= 2;\n      filteredRow[j + 1] = 0;\n      score += filteredRow[j];\n    }\n  }\n\n  filteredRow = filteredRow.filter(number => number !== 0);\n\n  while (filteredRow.length < numCols) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n"]}